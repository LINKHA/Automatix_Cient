// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/test.proto
// Protobuf C++ Version: 5.28.2

#include "protobuf/test.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr move_start::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : angle_{::int64_t{0}},
        move_state_{::int64_t{0}},
        uid_{::int64_t{0}},
        move_time_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR move_start::move_start(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct move_startDefaultTypeInternal {
  PROTOBUF_CONSTEXPR move_startDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~move_startDefaultTypeInternal() {}
  union {
    move_start _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 move_startDefaultTypeInternal _move_start_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protobuf_2ftest_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_2ftest_2eproto = nullptr;
const ::uint32_t
    TableStruct_protobuf_2ftest_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::move_start, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::move_start, _impl_.angle_),
        PROTOBUF_FIELD_OFFSET(::move_start, _impl_.move_state_),
        PROTOBUF_FIELD_OFFSET(::move_start, _impl_.uid_),
        PROTOBUF_FIELD_OFFSET(::move_start, _impl_.move_time_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::move_start)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_move_start_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_2ftest_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023protobuf/test.proto\"O\n\nmove_start\022\r\n\005a"
    "ngle\030\001 \001(\003\022\022\n\nmove_state\030\002 \001(\003\022\013\n\003uid\030\003 "
    "\001(\003\022\021\n\tmove_time\030\004 \001(\003B\tZ\007.;protob\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_protobuf_2ftest_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protobuf_2ftest_2eproto = {
    false,
    false,
    121,
    descriptor_table_protodef_protobuf_2ftest_2eproto,
    "protobuf/test.proto",
    &descriptor_table_protobuf_2ftest_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_protobuf_2ftest_2eproto::offsets,
    file_level_enum_descriptors_protobuf_2ftest_2eproto,
    file_level_service_descriptors_protobuf_2ftest_2eproto,
};
// ===================================================================

class move_start::_Internal {
 public:
};

move_start::move_start(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:move_start)
}
move_start::move_start(
    ::google::protobuf::Arena* arena, const move_start& from)
    : move_start(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE move_start::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void move_start::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, angle_),
           0,
           offsetof(Impl_, move_time_) -
               offsetof(Impl_, angle_) +
               sizeof(Impl_::move_time_));
}
move_start::~move_start() {
  // @@protoc_insertion_point(destructor:move_start)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void move_start::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    move_start::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_move_start_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &move_start::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<move_start>(),
            ::google::protobuf::Message::GetNewImpl<move_start>(),
            ::google::protobuf::Message::GetClearImpl<move_start>(), &move_start::ByteSizeLong,
                &move_start::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(move_start, _impl_._cached_size_),
            false,
        },
        &move_start::kDescriptorMethods,
        &descriptor_table_protobuf_2ftest_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* move_start::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> move_start::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::move_start>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 move_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(move_start, _impl_.move_time_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(move_start, _impl_.move_time_)}},
    // int64 angle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(move_start, _impl_.angle_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(move_start, _impl_.angle_)}},
    // int64 move_state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(move_start, _impl_.move_state_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(move_start, _impl_.move_state_)}},
    // int64 uid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(move_start, _impl_.uid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(move_start, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 angle = 1;
    {PROTOBUF_FIELD_OFFSET(move_start, _impl_.angle_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 move_state = 2;
    {PROTOBUF_FIELD_OFFSET(move_start, _impl_.move_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 uid = 3;
    {PROTOBUF_FIELD_OFFSET(move_start, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 move_time = 4;
    {PROTOBUF_FIELD_OFFSET(move_start, _impl_.move_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void move_start::Clear() {
// @@protoc_insertion_point(message_clear_start:move_start)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.angle_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.move_time_) -
      reinterpret_cast<char*>(&_impl_.angle_)) + sizeof(_impl_.move_time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* move_start::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const move_start& this_ = static_cast<const move_start&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* move_start::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const move_start& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:move_start)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 angle = 1;
          if (this_._internal_angle() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_angle(), target);
          }

          // int64 move_state = 2;
          if (this_._internal_move_state() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_move_state(), target);
          }

          // int64 uid = 3;
          if (this_._internal_uid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_uid(), target);
          }

          // int64 move_time = 4;
          if (this_._internal_move_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_move_time(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:move_start)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t move_start::ByteSizeLong(const MessageLite& base) {
          const move_start& this_ = static_cast<const move_start&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t move_start::ByteSizeLong() const {
          const move_start& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:move_start)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 angle = 1;
            if (this_._internal_angle() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_angle());
            }
            // int64 move_state = 2;
            if (this_._internal_move_state() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_move_state());
            }
            // int64 uid = 3;
            if (this_._internal_uid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_uid());
            }
            // int64 move_time = 4;
            if (this_._internal_move_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_move_time());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void move_start::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<move_start*>(&to_msg);
  auto& from = static_cast<const move_start&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:move_start)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_angle() != 0) {
    _this->_impl_.angle_ = from._impl_.angle_;
  }
  if (from._internal_move_state() != 0) {
    _this->_impl_.move_state_ = from._impl_.move_state_;
  }
  if (from._internal_uid() != 0) {
    _this->_impl_.uid_ = from._impl_.uid_;
  }
  if (from._internal_move_time() != 0) {
    _this->_impl_.move_time_ = from._impl_.move_time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void move_start::CopyFrom(const move_start& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:move_start)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void move_start::InternalSwap(move_start* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(move_start, _impl_.move_time_)
      + sizeof(move_start::_impl_.move_time_)
      - PROTOBUF_FIELD_OFFSET(move_start, _impl_.angle_)>(
          reinterpret_cast<char*>(&_impl_.angle_),
          reinterpret_cast<char*>(&other->_impl_.angle_));
}

::google::protobuf::Metadata move_start::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protobuf_2ftest_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
